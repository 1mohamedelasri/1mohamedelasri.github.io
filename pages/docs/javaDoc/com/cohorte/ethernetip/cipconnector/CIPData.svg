<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="441px" preserveAspectRatio="none" style="width:261px;height:441px;" version="1.1" viewBox="0 0 261 441" width="261px" zoomAndPan="magnify"><defs><filter height="300%" id="faqm2kunkp0kn" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[f09bfaf670dd19929d9f3d3380da3b5e]
class com.cohorte.ethernetip.cipconnector.CIPData--><a href="CIPData.html" target="_top" title="CIPData.html" xlink:actuate="onRequest" xlink:href="CIPData.html" xlink:show="new" xlink:title="CIPData.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#faqm2kunkp0kn)" height="404.0527" id="com.cohorte.ethernetip.cipconnector.CIPData" style="stroke: #A80036; stroke-width: 1.5;" width="243" x="7" y="7"/><ellipse cx="36.4" cy="26.1328" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M38.8731,32.2759 Q38.2921,32.5747 37.6529,32.7241 Q37.0138,32.8735 36.3082,32.8735 Q33.8014,32.8735 32.4815,31.2217 Q31.1617,29.5698 31.1617,26.4487 Q31.1617,23.3193 32.4815,21.6675 Q33.8014,20.0156 36.3082,20.0156 Q37.0138,20.0156 37.6612,20.165 Q38.3087,20.3145 38.8731,20.6133 L38.8731,23.3359 Q38.2423,22.7549 37.6488,22.4851 Q37.0553,22.2153 36.4244,22.2153 Q35.0797,22.2153 34.3949,23.282 Q33.7101,24.3486 33.7101,26.4487 Q33.7101,28.5405 34.3949,29.6072 Q35.0797,30.6738 36.4244,30.6738 Q37.0553,30.6738 37.6488,30.4041 Q38.2423,30.1343 38.8731,29.5532 Z "/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="53" x="116.6" y="25.5352">CIPData</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="179" x="53.6" y="38.1563">com.cohorte.ethernetip.cipconnector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="249" y1="45.2656" y2="45.2656"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="53.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="27" y="59.9004">isChanged: boolean</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="66.2207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="27" y="72.8555">type: DataType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="79.1758"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="27" y="85.8105">O_T_order: ByteOrder</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="92.1309"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="27" y="98.7656">T_O_order: ByteOrder</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="15" y="105.0859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="27" y="111.7207">dataValue: List</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="249" y1="118.041" y2="118.041"/><ellipse cx="18" cy="129.041" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="27" y="132.6758">getType(): DataType</text><ellipse cx="18" cy="141.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="27" y="145.6309">setType(DataType): void</text><ellipse cx="18" cy="154.9512" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="27" y="158.5859">getO_T_order(): ByteOrder</text><ellipse cx="18" cy="167.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="27" y="171.541">setO_T_order(ByteOrder): void</text><ellipse cx="18" cy="180.8613" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="27" y="184.4961">getT_O_order(): ByteOrder</text><ellipse cx="18" cy="193.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="27" y="197.4512">setT_O_order(ByteOrder): void</text><ellipse cx="18" cy="206.7715" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="27" y="210.4063">setDataValue(List): void</text><ellipse cx="18" cy="219.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="27" y="223.3613">getDataValue(): List</text><ellipse cx="18" cy="232.6816" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="27" y="236.3164">getDataBytes(): List&lt;Byte&gt;</text><ellipse cx="18" cy="245.6367" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="27" y="249.2715">setDataBytes(List&lt;Byte&gt;): void</text><ellipse cx="18" cy="258.5918" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="27" y="262.2266">getDataRow(int): Object</text><ellipse cx="18" cy="271.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="27" y="275.1816">setDataRow(Object, int): void</text><ellipse cx="18" cy="284.502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="27" y="288.1367">isChanged(): boolean</text><ellipse cx="18" cy="297.457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="27" y="301.0918">isChanged(boolean): void</text><ellipse cx="18" cy="310.4121" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="27" y="314.0469">getCipDataSize(): int</text><ellipse cx="18" cy="323.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="27" y="327.002">intializeWithZero(int): void</text><ellipse cx="18" cy="336.3223" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="217" x="27" y="339.957">bytesToShorts(List&lt;Byte&gt;): List&lt;Short&gt;</text><ellipse cx="18" cy="349.2773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="211" x="27" y="352.9121">bytesToInts(List&lt;Byte&gt;): List&lt;Integer&gt;</text><ellipse cx="18" cy="362.2324" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="216" x="27" y="365.8672">shortsToBytes(List&lt;Short&gt;): List&lt;Byte&gt;</text><ellipse cx="18" cy="375.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="210" x="27" y="378.8223">intsToBytes(List&lt;Integer&gt;): List&lt;Byte&gt;</text><ellipse cx="18" cy="388.1426" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="27" y="391.7773">isEqual(List&lt;Byte&gt;): boolean</text><ellipse cx="18" cy="401.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="27" y="404.7324">validateDataType(List): boolean</text></a><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="182" x="37.5" y="427.7207">UMLDoclet 2.0.9, PlantUML 1.2020.08</text><!--MD5=[22d1194c4dd4048a7f237ea190113288]
@startuml
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>CIPData\n<size:10>com.cohorte.ethernetip.cipconnector" as com.cohorte.ethernetip.cipconnector.CIPData [[CIPData.html]] {
        -isChanged: boolean
        -type: DataType
        -O_T_order: ByteOrder
        -T_O_order: ByteOrder
        -dataValue: List
        +getType(): DataType
        +setType(DataType): void
        +getO_T_order(): ByteOrder
        +setO_T_order(ByteOrder): void
        +getT_O_order(): ByteOrder
        +setT_O_order(ByteOrder): void
        +setDataValue(List): void
        +getDataValue(): List
        +getDataBytes(): List<Byte>
        +setDataBytes(List<Byte>): void
        +getDataRow(int): Object
        +setDataRow(Object, int): void
        +isChanged(): boolean
        +isChanged(boolean): void
        +getCipDataSize(): int
        +intializeWithZero(int): void
        {static} +bytesToShorts(List<Byte>): List<Short>
        {static} +bytesToInts(List<Byte>): List<Integer>
        {static} +shortsToBytes(List<Short>): List<Byte>
        {static} +intsToBytes(List<Integer>): List<Byte>
        +isEqual(List<Byte>): boolean
        +validateDataType(List): boolean
    }

    center footer UMLDoclet 2.0.9, PlantUML 1.2020.08
@enduml

PlantUML version 1.2020.08(Sun Apr 26 16:08:22 CEST 2020)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 14.0.2+12-46
Operating System: Mac OS X
Default Encoding: UTF-8
Language: fr
Country: FR
--></g></svg>